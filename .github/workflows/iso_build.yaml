name: iso_build
on:
  schedule:
    - cron:  '2 2 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [iso_profile_update]

jobs:
  prepare_release:
    runs-on: ubuntu-20.04
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - 
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDDHHmm'
      - 
        id: create_release
        run: |
          gh release create ${{ steps.time.outputs.time }}
    outputs:
      release_tag: ${{ steps.time.outputs.time }}

  build-release:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ##### EDIT ME #####      
        EDITION: [sway]
        BRANCH: [stable]
        SCOPE: [full]
        ###################
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      -
        id: image-build
        uses: Manjaro/manjaro-iso-action@feat/release-upload
        with:
          iso-profiles-repo: https://github.com/Manjaro-Sway/iso-profiles
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          scope: ${{ matrix.scope }}
          version: "21.0"
          kernel: linux510
          code-name: "Ornara"
          release-tag: ${{ needs.prepare_release.outputs.release_tag }}
      - id: upload_release_assets
        run: |
          gh release upload ${{ needs.prepare_release.outputs.release_tag }} --clobber \
            ./${{ steps.image-build.outputs.file-path }}.zip \
            ./${{ steps.image-build.outputs.file-path }}.z01 \
            ./${{ steps.image-build.outputs.file-sha256 }} \
            ./${{ steps.image-build.outputs.file-pkg }}
      # - 
      #   id: upload_release_zip
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #     asset_path: ./${{ steps.image-build.outputs.file-path }}.zip
      #     asset_name: ${{ steps.image-build.outputs.file-path }}.zip
      #     asset_content_type: application/zip
      # - 
      #   id: check_files
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: ${{ steps.image-build.outputs.file-path }}.z01
      #     allow_failure: false
      # - 
      #   id: upload_release_z01
      #   uses: actions/upload-release-asset@v1
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #     asset_path: ./${{ steps.image-build.outputs.file-path }}.z01
      #     asset_name: ${{ steps.image-build.outputs.file-path }}.z01
      #     asset_content_type: application/zip
      # - 
      #   id: upload_sha256
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #     asset_path: ./${{ steps.image-build.outputs.file-sha256 }}
      #     asset_name: ${{ steps.image-build.outputs.file-sha256 }}
      #     asset_content_type: text/plain
      # - 
      #   id: upload_pkg
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #     asset_path: ./${{ steps.image-build.outputs.file-pkg }}
      #     asset_name: ${{ steps.image-build.outputs.file-pkg }}
      #     asset_content_type: text/plain     
      - 
        name: rollback_release
        if: failure()
        uses: author/action-rollback@stable
        with:
          release_id: ${{ needs.prepare_release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
